<SUF7ScreenData>
<Name>Select Shortcut Folder</Name>
<Description>Prompts the user to select a folder where the shortcut icons will be installed.

(The selected folder name is stored in the %AppShortcutFolderName% session variable.)</Description>
<GalleryVisiblity>15</GalleryVisiblity>
<Screen>
<Type>115</Type>
<Name>Select Shortcut Folder</Name>
<BannerStyle>2</BannerStyle>
<TemplateName>Select Shortcut Folder</TemplateName>
<OverrideProjTheme>0</OverrideProjTheme>
<StyleData>
<CstClrs>0</CstClrs>
<TBBG format="hex">ffffff</TBBG>
<BDYBG format="hex">ece9d8</BDYBG>
<FTBG format="hex">ece9d8</FTBG>
<TBTXT format="hex">000000</TBTXT>
<BDYTXT format="hex">000000</BDYTXT>
<CBG format="hex">ffffff</CBG>
<C3DFACE format="hex">ece9d8</C3DFACE>
<C3DHLT format="hex">ece9d8</C3DHLT>
<C3DLIT format="hex">ffffff</C3DLIT>
<C3DSH format="hex">aca899</C3DSH>
<CBTNTXT format="hex">000000</CBTNTXT>
<CTEXT format="hex">000000</CTEXT>
<CDISTXT format="hex">aca899</CDISTXT>
<CPRGRS format="hex">316ac5</CPRGRS>
<C3DSHDK format="hex">716f64</C3DSHDK>
<TBIMG>Default_Top_Banner.jpg</TBIMG>
<SBIMG>Default_Side_Banner.jpg</SBIMG>
<BDIMG/>
<BDFILL>0</BDFILL>
<HDSEP>1</HDSEP>
<FTSEP>1</FTSEP>
<CstFnts>0</CstFnts>
<Fonts>
<FontData>
<FontName>Arial</FontName>
<CharacterSet>0</CharacterSet>
<Height>-13</Height>
<Weight>700</Weight>
<Italic>0</Italic>
<Underline>0</Underline>
<StrikeOut>0</StrikeOut>
<AntiAlias>1</AntiAlias>
</FontData>
<FontData>
<FontName>Arial</FontName>
<CharacterSet>0</CharacterSet>
<Height>-13</Height>
<Weight>700</Weight>
<Italic>0</Italic>
<Underline>0</Underline>
<StrikeOut>0</StrikeOut>
<AntiAlias>1</AntiAlias>
</FontData>
<FontData>
<FontName>Arial</FontName>
<CharacterSet>0</CharacterSet>
<Height>-24</Height>
<Weight>700</Weight>
<Italic>0</Italic>
<Underline>0</Underline>
<StrikeOut>0</StrikeOut>
<AntiAlias>1</AntiAlias>
</FontData>
<FontData>
<FontName>Arial</FontName>
<CharacterSet>0</CharacterSet>
<Height>-13</Height>
<Weight>400</Weight>
<Italic>0</Italic>
<Underline>0</Underline>
<StrikeOut>0</StrikeOut>
<AntiAlias>1</AntiAlias>
</FontData>
<FontData>
<FontName>Arial</FontName>
<CharacterSet>0</CharacterSet>
<Height>-13</Height>
<Weight>400</Weight>
<Italic>0</Italic>
<Underline>0</Underline>
<StrikeOut>0</StrikeOut>
<AntiAlias>1</AntiAlias>
</FontData>
</Fonts>
<CAOff>
<TP>0</TP>
<L>15</L>
<T>15</T>
<R>15</R>
<B>15</B>
</CAOff>
<CAOff>
<TP>1</TP>
<L>15</L>
<T>15</T>
<R>15</R>
<B>15</B>
</CAOff>
<CAOff>
<TP>2</TP>
<L>15</L>
<T>15</T>
<R>15</R>
<B>15</B>
</CAOff>
</StyleData>
<NameVariable>%AppShortcutFolderName%</NameVariable>
<Events>
<Event>
<Name>On Preload</Name>
<Args/>
<Script>-- These actions are performed before the screen is shown.

-- select the appropriate user profile for the shortcuts
-- (per user or all users) based on _UsePerUserFolders

-- We only want to offer all user vs. per user on Windows NT 4.0/2000/XP+
local bHideUserProfileOptions = false;
local tblOS = System.GetOSVersionInfo();
if(tblOS)then
	if(tblOS.PlatformId == "1")then
		bHideUserProfileOptions = true;
	end
end

if(bHideUserProfileOptions)then
	DlgRadioButton.SetProperties(CTRL_RADIOBTN_PERUSER,{Visible = false});
	DlgRadioButton.SetProperties(CTRL_RADIOBTN_ALLUSERS,{Visible = false});
	-- Always use per user folders on Windows 95/98/ME
	_UsePerUserFolders = true;
else
	DlgRadioButton.SetProperties(CTRL_RADIOBTN_PERUSER,{Checked = _UsePerUserFolders});
	DlgRadioButton.SetProperties(CTRL_RADIOBTN_ALLUSERS,{Checked = not _UsePerUserFolders});
end

-- from _SUF70_Global_Functions.lua:
-- fill the combo box with the existing shortcut folder names
g_FillComboBoxWithShortcutFolders(CTRL_COMBOBOX_SHORTCUTFOLDERS);
</Script>
</Event>
<Event>
<Name>On Back</Name>
<Args/>
<Script>-- These actions are performed when the Back button is clicked.

-- go back to the previous screen
Screen.Back();
</Script>
</Event>
<Event>
<Name>On Next</Name>
<Args/>
<Script>-- These actions are performed when the Next button is clicked.

-- get the text from the combo box
strShortcutFolder = DlgComboBox.GetProperties(CTRL_COMBOBOX_SHORTCUTFOLDERS).Text;

-- if the shortcut folder path is empty, display a message
-- if it isn't empty, check for invalid characters and advance to the next screen
if String.Length(strShortcutFolder) == 0 then

	-- the field is empty...
	-- come on user, don't be shy :)
	local strTitle = SetupData.GetLocalizedString("MSG_INVALID_ENTRY");
	local strPrompt = SetupData.GetLocalizedString("ERR_FIELD_CANNOT_BE_EMPTY");
	Dialog.Message(strTitle, strPrompt, MB_OK, MB_ICONEXCLAMATION);

else
	-- the field's not empty...
	-- make sure the shortcut folder path contains only valid characters for a relative path
	if g_ContainsValidRelativePathChars(strShortcutFolder) then

		-- advance to the next screen
		Screen.Next();

	else
		-- the shortcut folder contains invalid characters
		-- tell the user to smarten up :)
		local strTitle = SetupData.GetLocalizedString("MSG_INVALID_ENTRY");
		local strPrompt = SetupData.GetLocalizedString("ERR_INVALID_CHARACTERS") .. "\r\n/ * ? \" &lt; &gt; | :";
		Dialog.Message(strTitle, strPrompt, MB_OK, MB_ICONEXCLAMATION);
	end
end
</Script>
</Event>
<Event>
<Name>On Cancel</Name>
<Args/>
<Script>-- These actions are performed when the Cancel button is clicked.

-- from _SUF70_Global_Functions.lua:
-- ask user if they're sure they want to exit
if g_ConfirmSetupAbort() then
	Application.Exit(EXIT_REASON_USER_ABORTED);
end
</Script>
</Event>
<Event>
<Name>On Help</Name>
<Args/>
<Script>-- These actions are performed when the Help button is clicked.
</Script>
</Event>
<Event>
<Name>On Ctrl Message</Name>
<Args>number e_CtrlID, number e_MsgID, table e_Details</Args>
<Script>-- These actions are triggered by the controls on the screen.

if (e_MsgID == MSGID_CLICKED) then

	-- something was clicked...was it one of the radio buttons?
	if (e_CtrlID == CTRL_RADIOBTN_PERUSER) then

		-- the user selected the 'per-user' option on the screen...
	
		-- turn the option on in the setup
		_UsePerUserFolders = true;

		-- update the list of shortcut folders in the combo box
		g_FillComboBoxWithShortcutFolders(CTRL_COMBOBOX_SHORTCUTFOLDERS);

	elseif (e_CtrlID == CTRL_RADIOBTN_ALLUSERS) then

		-- the user selected the 'all-users' option on the screen...

		-- turn the option off in the setup
		_UsePerUserFolders = false;

		-- update the list of shortcut folders in the combo box
		g_FillComboBoxWithShortcutFolders(CTRL_COMBOBOX_SHORTCUTFOLDERS);
	end
end
</Script>
</Event>
</Events>
<Controls>
<Control>
<Type>1</Type>
<ID>103</ID>
<Visible>0</Visible>
<Enabled>0</Enabled>
<TabOrder>75</TabOrder>
<FTButton>1</FTButton>
</Control>
<Control>
<Type>1</Type>
<ID>101</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>76</TabOrder>
<FTButton>1</FTButton>
</Control>
<Control>
<Type>1</Type>
<ID>100</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>-10</TabOrder>
<FTButton>1</FTButton>
</Control>
<Control>
<Type>1</Type>
<ID>102</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>-9</TabOrder>
<FTButton>1</FTButton>
</Control>
<Control>
<Type>2</Type>
<ID>203</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>0</TabOrder>
<IsHeading>0</IsHeading>
</Control>
<Control>
<Type>2</Type>
<ID>211</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>1</TabOrder>
<IsHeading>0</IsHeading>
</Control>
<Control>
<Type>4</Type>
<ID>501</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>2</TabOrder>
<Sorted>0</Sorted>
<ShowShortcutFolders>1</ShowShortcutFolders>
<PerUser>1</PerUser>
<Variable/>
<Lines>4</Lines>
<ComboType>1</ComboType>
</Control>
<Control>
<Type>5</Type>
<ID>600</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>35</TabOrder>
<Group>1</Group>
<StartID>600</StartID>
<EndID>601</EndID>
</Control>
<Control>
<Type>5</Type>
<ID>601</ID>
<Visible>1</Visible>
<Enabled>1</Enabled>
<TabOrder>40</TabOrder>
<Group>0</Group>
<StartID>600</StartID>
<EndID>601</EndID>
</Control>
</Controls>
</Screen>
</SUF7ScreenData>
