<ActionTemplates>
   <Action>
      <Name>Math.Abs</Name>
      <Description>Returns the absolute, positive value of a given number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose absolute value you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>-12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Acos</Name>
      <Description>Returns the arccosine of a number (in radians).</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose arccosine value you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>-0.5</Default>
               <DataType>number</DataType>
               <Constraints>-1,1</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Asin</Name>
      <Description>Returns the arcsine of a number (in radians).</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose arcsine value you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>-0.5</Default>
               <DataType>number</DataType>
               <Constraints>-1,1</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Atan</Name>
      <Description>Returns the arctangent of a number (in radians).</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose arctangent value you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Atan2</Name>
      <Description>Returns the arctangent of Num1/Num2 (in radians).</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num1</Name>
            <Description>The number to use as the dividend.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Num2</Name>
            <Description>The number to use as the divisor.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>9</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Ceil</Name>
      <Description>Returns the ceiling of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose ceiling you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12.4</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Cos</Name>
      <Description>Returns the cosine (cos) of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose cosine value you want (angle in radians).</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Deg</Name>
      <Description>Converts a number from radians to degrees.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Radian</Name>
            <Description>The number in radians.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>0.9</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Exp</Name>
      <Description>Returns the exponential value of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose exponential value you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>0.9</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Floor</Name>
      <Description>Returns the floor of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose floor you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12.9</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Frexp</Name>
      <Description>Returns a table containing the mantissa (m) and exponent (n) of a number (x) in the equation x = m * 2^n.</Description>
      <ReturnValueType>table</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose mantissa and exponent you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.HexToNumber</Name>
      <Description>Returns a decimal value given a hexadecimal value.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>HexValue</Name>
            <Description>The hexadecimal value, e.g. "0xc0ff".</Description>
            <Type>string</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>"ABCD"</Default>
               <DataType>string</DataType>
               <Constraints>*,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Ldexp</Name>
      <Description>Returns a number (x), given a mantissa (m) and an exponent (n) in the equation x = m * 2^n.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Mantissa</Name>
            <Description>The mantissa value.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>0.75</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Exponent</Name>
            <Description> The exponent value.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>4</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Log</Name>
      <Description>Returns the logarithm of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose logarithm you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Log10</Name>
      <Description>Returns the base-10 logarithm of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number whose base-10 logarithm you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Max</Name>
      <Description>Compares two numbers and returns the largest.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num1</Name>
            <Description>The first input number.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>1</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Num2</Name>
            <Description>The second input number.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Min</Name>
      <Description>Compares two numbers and returns the smallest.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num1</Name>
            <Description>The first input number.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>1</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Num2</Name>
            <Description>The second input number.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Mod</Name>
      <Description>Returns the modulus of Num1/Num2.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num1</Name>
            <Description>The dividend.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Num2</Name>
            <Description>The divisor.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>5</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Pow</Name>
      <Description>Returns the calcualtion of Base raised to the power of Exponent.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Base</Name>
            <Description>The base.</Description>
            <Type>number</Type>
            <Default>2</Default>
            <Required>1</Required>
            <EasyMode>
               <Default>2</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Exponent</Name>
            <Description>The exponent.</Description>
            <Type>number</Type>
            <Default>4</Default>
            <Required>1</Required>
            <EasyMode>
               <Default>4</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Rad</Name>
      <Description>Converts a number from degrees to radians.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Degree</Name>
            <Description>The number in degrees.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>180</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Random</Name>
      <Description>Generates a random number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Rand1</Name>
            <Description>If only one parameter is passed this function will return a value between 1 and Rand1; if two are passed, a value between Rand1 and Rand2 will be returned.</Description>
            <Type>number</Type>
            <Default>nil</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>nil</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>Rand2</Name>
            <Description>If this parameter is specified a value between Rand1 and Rand2 will be returned.</Description>
            <Type>number</Type>
            <Default>nil</Default>
            <Required>0</Required>
            <EasyMode>
               <Default>nil</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.RandomSeed</Name>
      <Description>Seeds the random number generator used by Math.Random.</Description>
      <ReturnValueType/>
      <Arguments>
         <Arg>
            <Name>Seed</Name>
            <Description>The seed value.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>System.GetDate(DATE_FMT_JULIAN) + System.GetTime(TIME_FMT_SEC)</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Round</Name>
      <Description>Returns the "rounded" version of a given number to the specified number of decimal places.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The number you want to round.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>25.3</Default>
               <DataType>number</DataType>
               <Constraints>*,*</Constraints>
            </EasyMode>
         </Arg>
         <Arg>
            <Name>DecimalPlaces</Name>
            <Description>The number of decimal places you want to round the number to. If 0 is passed, the number will be rounded to the nearest integer. If 2 is passed, the number will be rounded to 2 decimal places.</Description>
            <Type>number</Type>
            <Default>0</Default>
            <Required>1</Required>
            <EasyMode>
               <Default>0</Default>
               <DataType>number</DataType>
               <Constraints>*,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Sin</Name>
      <Description>Returns the sine of a radian value.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The angle in radians.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Sqrt</Name>
      <Description>Returns the square root of a number.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The positive number whose square root you want.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>9</Default>
               <DataType>number</DataType>
               <Constraints>0,*</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
   <Action>
      <Name>Math.Tan</Name>
      <Description>Returns the tangent of a radian value.</Description>
      <ReturnValueType>number</ReturnValueType>
      <Arguments>
         <Arg>
            <Name>Num</Name>
            <Description>The angle in radians.</Description>
            <Type>number</Type>
            <Default/>
            <Required>1</Required>
            <EasyMode>
               <Default>12</Default>
               <DataType>number</DataType>
               <Constraints>none</Constraints>
            </EasyMode>
         </Arg>
      </Arguments>
   </Action>
</ActionTemplates>
